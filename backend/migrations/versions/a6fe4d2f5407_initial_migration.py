"""Initial migration

Revision ID: a6fe4d2f5407
Revises: 
Create Date: 2025-01-14 22:38:25.247199

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a6fe4d2f5407'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coin_price_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('open_price', sa.Float(), nullable=False),
    sa.Column('high_price', sa.Float(), nullable=False),
    sa.Column('low_price', sa.Float(), nullable=False),
    sa.Column('close_price', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reward_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('percentage_weekly', sa.Float(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reward_setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weekly_percentage', sa.Float(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('refresh_key', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('last_reward_date', sa.DateTime(), nullable=True),
    sa.Column('referral_code', sa.String(length=16), nullable=True),
    sa.Column('referrer_id', sa.Integer(), nullable=True),
    sa.Column('total_referrals', sa.Integer(), nullable=True),
    sa.Column('referral_reward', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['referrer_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('referral_code'),
    sa.UniqueConstraint('username')
    )
    op.create_table('utility',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pdes_price', sa.Float(), nullable=False),
    sa.Column('pdes_market_cap', sa.Float(), nullable=False),
    sa.Column('pdes_circulating_supply', sa.Float(), nullable=False),
    sa.Column('conversion_rate', sa.Float(), nullable=False),
    sa.Column('pdes_supply_left', sa.Float(), nullable=False),
    sa.Column('pdes_total_supply', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account_detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('BTCAddress', sa.String(length=30), nullable=False),
    sa.Column('BTCAddressSeed', sa.String(length=50), nullable=False),
    sa.Column('ETHAddress', sa.String(length=30), nullable=False),
    sa.Column('ETHAddressSeed', sa.String(length=50), nullable=False),
    sa.Column('LTCAddress', sa.String(length=30), nullable=False),
    sa.Column('LTCAddressSeed', sa.String(length=50), nullable=False),
    sa.Column('USDCAddress', sa.String(length=30), nullable=False),
    sa.Column('USDCAddressSeed', sa.String(length=50), nullable=False),
    sa.Column('PDESAddress', sa.String(length=30), nullable=False),
    sa.ForeignKeyConstraint(['PDESAddress'], ['user.username'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('balance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('crypto_balance', sa.Float(), nullable=False),
    sa.Column('rewards', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crypto',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('crypto_name', sa.String(length=100), nullable=False),
    sa.Column('account_address', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_address')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=200), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pdes_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('account_name', sa.String(length=100), nullable=False),
    sa.Column('account_number', sa.String(length=20), nullable=True),
    sa.Column('btc_address', sa.String(length=20), nullable=True),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('transaction_completed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction')
    op.drop_table('pdes_transaction')
    op.drop_table('notification')
    op.drop_table('crypto')
    op.drop_table('balance')
    op.drop_table('account_detail')
    op.drop_table('utility')
    op.drop_table('user')
    op.drop_table('reward_setting')
    op.drop_table('reward_config')
    op.drop_table('coin_price_history')
    # ### end Alembic commands ###
